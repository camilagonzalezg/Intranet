### YamlMime:ManagedReference
items:
- uid: IntranetModel.Gerencias
  commentId: T:IntranetModel.Gerencias
  id: Gerencias
  parent: IntranetModel
  children:
  - IntranetModel.Gerencias.#ctor
  - IntranetModel.Gerencias.id
  - IntranetModel.Gerencias.nombre
  - IntranetModel.Gerencias.Subgerencias
  - IntranetModel.Gerencias.Usuarios
  langs:
  - csharp
  - vb
  name: Gerencias
  nameWithType: Gerencias
  fullName: IntranetModel.Gerencias
  type: Class
  source:
    remote:
      path: intranetweb/IntranetModel/Gerencias.cs
      branch: main
      repo: https://github.com/camilagonzalezg/Intranet.git
    id: Gerencias
    path: IntranetModel/Gerencias.cs
    startLine: 14
  assemblies:
  - IntranetModel
  namespace: IntranetModel
  syntax:
    content: public class Gerencias
    content.vb: Public Class Gerencias
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: IntranetModel.Gerencias.#ctor
  commentId: M:IntranetModel.Gerencias.#ctor
  id: '#ctor'
  parent: IntranetModel.Gerencias
  langs:
  - csharp
  - vb
  name: Gerencias()
  nameWithType: Gerencias.Gerencias()
  fullName: IntranetModel.Gerencias.Gerencias()
  type: Constructor
  source:
    remote:
      path: intranetweb/IntranetModel/Gerencias.cs
      branch: main
      repo: https://github.com/camilagonzalezg/Intranet.git
    id: .ctor
    path: IntranetModel/Gerencias.cs
    startLine: 16
  assemblies:
  - IntranetModel
  namespace: IntranetModel
  syntax:
    content: public Gerencias()
    content.vb: Public Sub New
  overload: IntranetModel.Gerencias.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: IntranetModel.Gerencias.id
  commentId: P:IntranetModel.Gerencias.id
  id: id
  parent: IntranetModel.Gerencias
  langs:
  - csharp
  - vb
  name: id
  nameWithType: Gerencias.id
  fullName: IntranetModel.Gerencias.id
  type: Property
  source:
    remote:
      path: intranetweb/IntranetModel/Gerencias.cs
      branch: main
      repo: https://github.com/camilagonzalezg/Intranet.git
    id: id
    path: IntranetModel/Gerencias.cs
    startLine: 23
  assemblies:
  - IntranetModel
  namespace: IntranetModel
  syntax:
    content: public int id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property id As Integer
  overload: IntranetModel.Gerencias.id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: IntranetModel.Gerencias.nombre
  commentId: P:IntranetModel.Gerencias.nombre
  id: nombre
  parent: IntranetModel.Gerencias
  langs:
  - csharp
  - vb
  name: nombre
  nameWithType: Gerencias.nombre
  fullName: IntranetModel.Gerencias.nombre
  type: Property
  source:
    remote:
      path: intranetweb/IntranetModel/Gerencias.cs
      branch: main
      repo: https://github.com/camilagonzalezg/Intranet.git
    id: nombre
    path: IntranetModel/Gerencias.cs
    startLine: 24
  assemblies:
  - IntranetModel
  namespace: IntranetModel
  syntax:
    content: public string nombre { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property nombre As String
  overload: IntranetModel.Gerencias.nombre*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: IntranetModel.Gerencias.Subgerencias
  commentId: P:IntranetModel.Gerencias.Subgerencias
  id: Subgerencias
  parent: IntranetModel.Gerencias
  langs:
  - csharp
  - vb
  name: Subgerencias
  nameWithType: Gerencias.Subgerencias
  fullName: IntranetModel.Gerencias.Subgerencias
  type: Property
  source:
    remote:
      path: intranetweb/IntranetModel/Gerencias.cs
      branch: main
      repo: https://github.com/camilagonzalezg/Intranet.git
    id: Subgerencias
    path: IntranetModel/Gerencias.cs
    startLine: 26
  assemblies:
  - IntranetModel
  namespace: IntranetModel
  syntax:
    content: public virtual ICollection<Subgerencias> Subgerencias { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{IntranetModel.Subgerencias}
    content.vb: Public Overridable Property Subgerencias As ICollection(Of Subgerencias)
  overload: IntranetModel.Gerencias.Subgerencias*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: IntranetModel.Gerencias.Usuarios
  commentId: P:IntranetModel.Gerencias.Usuarios
  id: Usuarios
  parent: IntranetModel.Gerencias
  langs:
  - csharp
  - vb
  name: Usuarios
  nameWithType: Gerencias.Usuarios
  fullName: IntranetModel.Gerencias.Usuarios
  type: Property
  source:
    remote:
      path: intranetweb/IntranetModel/Gerencias.cs
      branch: main
      repo: https://github.com/camilagonzalezg/Intranet.git
    id: Usuarios
    path: IntranetModel/Gerencias.cs
    startLine: 28
  assemblies:
  - IntranetModel
  namespace: IntranetModel
  syntax:
    content: public virtual ICollection<Usuarios> Usuarios { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{IntranetModel.Usuarios}
    content.vb: Public Overridable Property Usuarios As ICollection(Of Usuarios)
  overload: IntranetModel.Gerencias.Usuarios*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: IntranetModel
  commentId: N:IntranetModel
  name: IntranetModel
  nameWithType: IntranetModel
  fullName: IntranetModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: IntranetModel.Gerencias.#ctor*
  commentId: Overload:IntranetModel.Gerencias.#ctor
  name: Gerencias
  nameWithType: Gerencias.Gerencias
  fullName: IntranetModel.Gerencias.Gerencias
- uid: IntranetModel.Gerencias.id*
  commentId: Overload:IntranetModel.Gerencias.id
  name: id
  nameWithType: Gerencias.id
  fullName: IntranetModel.Gerencias.id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: IntranetModel.Gerencias.nombre*
  commentId: Overload:IntranetModel.Gerencias.nombre
  name: nombre
  nameWithType: Gerencias.nombre
  fullName: IntranetModel.Gerencias.nombre
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: IntranetModel.Gerencias.Subgerencias*
  commentId: Overload:IntranetModel.Gerencias.Subgerencias
  name: Subgerencias
  nameWithType: Gerencias.Subgerencias
  fullName: IntranetModel.Gerencias.Subgerencias
- uid: System.Collections.Generic.ICollection{IntranetModel.Subgerencias}
  commentId: T:System.Collections.Generic.ICollection{IntranetModel.Subgerencias}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Subgerencias>
  nameWithType: ICollection<Subgerencias>
  fullName: System.Collections.Generic.ICollection<IntranetModel.Subgerencias>
  nameWithType.vb: ICollection(Of Subgerencias)
  fullName.vb: System.Collections.Generic.ICollection(Of IntranetModel.Subgerencias)
  name.vb: ICollection(Of Subgerencias)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IntranetModel.Subgerencias
    name: Subgerencias
    nameWithType: Subgerencias
    fullName: IntranetModel.Subgerencias
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IntranetModel.Subgerencias
    name: Subgerencias
    nameWithType: Subgerencias
    fullName: IntranetModel.Subgerencias
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: IntranetModel.Gerencias.Usuarios*
  commentId: Overload:IntranetModel.Gerencias.Usuarios
  name: Usuarios
  nameWithType: Gerencias.Usuarios
  fullName: IntranetModel.Gerencias.Usuarios
- uid: System.Collections.Generic.ICollection{IntranetModel.Usuarios}
  commentId: T:System.Collections.Generic.ICollection{IntranetModel.Usuarios}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Usuarios>
  nameWithType: ICollection<Usuarios>
  fullName: System.Collections.Generic.ICollection<IntranetModel.Usuarios>
  nameWithType.vb: ICollection(Of Usuarios)
  fullName.vb: System.Collections.Generic.ICollection(Of IntranetModel.Usuarios)
  name.vb: ICollection(Of Usuarios)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IntranetModel.Usuarios
    name: Usuarios
    nameWithType: Usuarios
    fullName: IntranetModel.Usuarios
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IntranetModel.Usuarios
    name: Usuarios
    nameWithType: Usuarios
    fullName: IntranetModel.Usuarios
  - name: )
    nameWithType: )
    fullName: )
